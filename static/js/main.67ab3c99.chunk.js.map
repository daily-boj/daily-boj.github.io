{"version":3,"sources":["styles/vars.ts","constants.ts","components/Logo.tsx","components/Navbar.tsx","pages/IndexPage/index.tsx","pages/About/index.tsx","pages/Branding/index.tsx","pages/Calendar/index.tsx","pages/Member/index.tsx","components/Icon.tsx","components/Link.tsx","pages/Newbie/index.tsx","pages/Stat/Solve/index.tsx","pages/Stat/Tier/index.tsx","app/InsetShadow.tsx","components/RasterizeSvg.tsx","app/ShadowedLogo.tsx","components/ScrollIndicator.tsx","app/index.tsx","service-worker.ts","styles/reset.ts","styles/default.ts","styles/font.ts","index.tsx"],"names":["NavbarBackground","hsl","NavbarForeground","MenuSelected","CodeBackground","CodeForeground","hsla","asset","path","process","PUBLIC_URL","Logo","Base","props","xmlns","viewBox","width","height","Use","type","xlinkHref","navbarBaseStyle","css","NavbarHeader","Vars","NavbarFake","LogoBaseStyled","LogoUseStyled","BrandNavLink","NavLink","OtherNavLink","to","id","exact","Fake","Highlight","styled","span","forwardRef","_props","ref","className","BrandingPage","icon","material","Icon","kind","value","data","BaseAnchor","a","BaseRouterLink","RouterLink","Link","External","children","URL","host","href","Internal","Navbar","StatSolvePage","StatTierPage","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","mode","in","in2","values","dx","dy","stdDeviation","operator","k2","k3","React","memo","canvas","useRef","useState","node","document","createElement","onload","current","getContext","drawImage","img","svgNode","setSvgNode","useMemo","baseVal","image64","serialized","XMLSerializer","serializeToString","blob","Blob","createObjectURL","useEffect","fakeRoot","style","position","opacity","zIndex","body","appendChild","render","svg","querySelector","getElementsByTagName","useTag","url","getAttribute","query","includes","substring","indexOf","fetch","text","svgText","svgParsed","DOMParser","parseFromString","element","documentElement","replacement","attributes","name","setAttribute","append","childNodes","outerHTML","toVisit","undefined","shift","HTMLElement","SVGElement","ownerDocument","styleSheets","sheet","rules","rule","ruleAny","matches","selectorText","Object","key","push","setTimeout","removeChild","src","ShadowedLogo","filter","InsetShadow","ScrollIndicator","rx","fill","strokeWidth","stroke","cx","cy","r","keyframes","d","strokeLinecap","strokeLinejoin","Sections","determineSectionFromLocation","location","index","App","history","useHistory","pathname","currentSectionIndex","setCurrentSectionIndex","sectionElements","currentSectionIndexRef","isAnimatingRef","inner","updateSectionIndex","useCallback","newIndex","listen","wheelListener","event","deltaY","isUp","isDown","currentSection","scrollHeight","clientHeight","scrollUpLimitReached","scrollTop","scrollDownLimitReached","Math","round","preventDefault","length","window","addEventListener","removeEventListener","touchStartTimeRef","Date","now","touchStartRef","lastVectorRef","touchStartListener","touches","pageX","pageY","touchMoveListener","vx","vy","angle","abs","atan2","PI","isHorizontal","left","transition","touchEndListener","_event","timeUsed","min","pageMovement","innerWidth","sign","transform","RoutedApp","basename","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","error","checkValidServiceWorker","headers","response","contentType","get","status","ready","unregister","reload","StyleReset","StyleDefault","StyleFont","IBMPlexSansKoreanExtraLight","IBMPlexSansKoreanLight","IBMPlexSansKoreanRegular","IBMPlexSansKoreanText","IBMPlexSansKoreanMedium","IBMPlexSansKoreanSemiBold","IBMPlexSansKoreanBold","ReactDOM","StrictMode","styles","getElementById","origin"],"mappings":"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","file":"static/js/main.67ab3c99.chunk.js","sourcesContent":["import { hsl, hsla } from 'polished';\n\n// navbar\nexport const NavbarBackground = hsl(230, 0.05, 0.15);\nexport const NavbarForeground = hsl(230, 0.05, 0.90);\n\nexport const MenuSelected = hsl(230, 1, 1);\n\n// index page\nexport const IntroductionBackground = hsl(0, 0.10, 0.95);\nexport const introductionForeground = hsl(230, 0.10, 0.05);\n\nexport const CatchphraseBackground = hsl(0, 0.10, 0.95);\nexport const CatchphraseForeground = hsl(230, 0.10, 0.05);\n\n// global\nexport const CodeBackground = hsl(230, 0.15, 0.65);\nexport const CodeForeground = hsl(40, 0.75, 0.75);\n\nexport const DropShadow = `2px 4px 32px ${hsla(0, 0.05, 0.05, 0.3)}`;\nexport const InnerShadow = `\n  inset 2px 2px 7px ${hsla(0, 0.05, 0.05, 0.2)},\n  inset -2px -2px 7px ${hsla(0, 0.05, 0.05, 0.2)};\n`;\n\nexport const Link = hsl(230, 0.85, 0.75);\nexport const LinkVisited = hsl(270, 0.85, 0.75);\n\nexport const TransitionTiming = 'ease-out';\nexport const TransitionDuration = '0.2s';\n\nexport const Background = 'linear-gradient(90deg, #FFFFFF 0%, #F5F5F5 100%);';\n\n","export const PUBLIC_URL = process.env.PUBLIC_URL;\n\nexport function asset(path: string): string {\n  if (path[0] === '/') {\n    return PUBLIC_URL + path;\n  } else {\n    return PUBLIC_URL + '/' + path;\n  }\n}","import React, { FC, SVGAttributes } from 'react';\nimport { asset } from '../constants';\n\nconst Base: FC<Exclude<SVGAttributes<SVGSVGElement>, 'viewBox'>> = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2048 2048\" width=\"2048\" height=\"2048\" {...props} />\n);\n\nconst Use: FC<Exclude<SVGAttributes<SVGUseElement>, 'href'>> = (props) => (\n  <use type=\"symbol\" xlinkHref={asset('/images/logo-symbol.svg#daily-boj-logo')} {...props} />\n);\n\nconst Logo = {\n  Base,\n  Use,\n};\n\nexport default Logo;","/* @jsx jsx */\n\nimport React, { FC } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled/macro';\nimport * as Vars from '../styles/vars';\nimport Logo from './Logo';\n\nconst NavbarHeight = '3rem';\n\nconst navbarBaseStyle = css`\n  height: ${NavbarHeight};\n  margin: 0.4rem 0;\n`;\n\nconst NavbarHeader = styled.header`\n  background-color: ${Vars.NavbarBackground};\n  color: ${Vars.NavbarForeground};\n  font-size: 1.1rem;\n\n  ${navbarBaseStyle};\n  width: max-content;\n\n  position: fixed;\n  left: 50%;\n  transform: translate(-50%, 0);\n\n  display: grid;\n  grid-template-columns: repeat(5, auto);\n  align-items: center;\n  grid-gap: min(max(6vw, 1.2em), 3rem);\n\n  padding: 0 min(max(4vw, 1em), 4rem);\n  border-radius: 1.5rem;\n\n  z-index: 100;\n\n  user-select: none;\n\n`;\nconst NavbarFake = styled.div`\n  ${navbarBaseStyle};\n`;\nconst LogoBaseStyled = styled(Logo.Base)`\n  height: 2.5rem;\n  max-width: 4rem;\n  vertical-align: middle;\n`;\nconst LogoUseStyled = styled(Logo.Use)`\n  fill: white;\n  stroke: white;\n`;\n\nconst BrandNavLink = styled(NavLink)`\n  &.active {\n    -webkit-filter: drop-shadow( 0px 0px 6px rgba(255, 255, 255, .8));\n    filter: drop-shadow( 0px 0px 6px rgba(255, 255, 255, .8));\n}\n`;\nconst OtherNavLink = styled(NavLink)`\n  &.active {\n    color: ${Vars.MenuSelected};\n    text-shadow: 0px 0px 6px rgba(255, 255, 255, 0.8);\n    font-weight: 500;\n  }\n`;\n\nconst NavbarBase: FC = () => (\n  <NavbarHeader>\n    <BrandNavLink to=\"/\">\n      <LogoBaseStyled>\n        <LogoUseStyled />\n      </LogoBaseStyled>\n    </BrandNavLink>\n\n    <OtherNavLink id=\"nav-about\" to=\"/about\" exact>\n      소개\n    </OtherNavLink>\n    <OtherNavLink id=\"nav-newbie\" to=\"/newbie\">\n      신입 가이드\n    </OtherNavLink>\n    <OtherNavLink id=\"nav-member\" to=\"/member\">\n      멤버\n    </OtherNavLink>\n    <OtherNavLink id=\"nav-calendar\" to=\"/calendar\">\n      달력\n    </OtherNavLink>\n  </NavbarHeader>\n);\n\n\nexport default {\n  Base: NavbarBase,\n  Fake: NavbarFake,\n  height: NavbarHeight,\n};","/* @jsx jsx */\n\nimport React, { forwardRef, ForwardRefRenderFunction } from 'react';\nimport { css, jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nconst Highlight = styled.span`\n  font-weight: 450;\n`;\n\nconst IndexPage: ForwardRefRenderFunction<HTMLDivElement> = (_props, ref) => (\n  <div\n    className=\"page\"\n    ref={ref}\n    css={css`\n      z-index: 10;\n      \n      height: 100%;\n\n      font-weight: 300;\n      font-size: 4vw;\n      line-height: 108.5%;\n      letter-spacing: -0.065em;\n\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      \n      @media screen and (min-width: 768px) {\n        font-size: 4vw;\n      }\n\n      @media screen and (min-width: 468px) and (max-width: 767px) {\n        font-size: 6vw;\n      }\n      \n      @media screen and (max-width: 467px) {\n        font-size: 8vw;\n      }\n    `}\n  >\n    <span css={css`\n      margin-left: 4vw;\n    `}>\n      <Highlight>데일리 백준</Highlight>으로<br />\n      <Highlight>하루</Highlight>에 적어도 <Highlight>한 문제</Highlight>는<br />\n      풀어봅시다\n    </span>\n  </div>\n);\n\nexport default forwardRef(IndexPage);","/* @jsx jsx */\n\nimport React, { forwardRef, ForwardRefRenderFunction } from 'react';\nimport { css, jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nconst Highlight = styled.span`\n  font-weight: 450;\n`;\n\nconst AboutPage: ForwardRefRenderFunction<HTMLDivElement> = (_props, ref) => (\n  <div\n    className=\"page\"\n    ref={ref}\n    css={css`\n      z-index: 10;\n\n      height: 100%;\n\n      font-weight: 300;\n      line-height: 108.5%;\n      letter-spacing: -0.065em;\n\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      \n      @media screen and (min-width: 768px) {\n        font-size: 2vw;\n      }\n\n      @media screen and (min-width: 468px) and (max-width: 767px) {\n        font-size: 3vw;\n      }\n      \n      @media screen and (max-width: 467px) {\n        font-size: 4vw;\n      }\n    `}\n  >\n    <span css={css`\n      text-align: right;\n      margin-right: 4vw;\n    `}>\n      <p>\n        <Highlight>데일리 백준</Highlight>은 <Highlight>알고리즘 문제 풀이</Highlight>를 하는 <Highlight>소모임</Highlight>입니다.\n      </p>\n      <p>\n        매일매일 참가자들끼리 <Highlight>토론으로 문제를 선정하고,</Highlight>\n        <br />\n        문제를 푸는 데에 어려움이 있다면 <Highlight>서로 질문을 나눕니다.</Highlight>\n      </p>\n      <p>\n        <Highlight>이 모임에서 지켜야 하는 규칙은 아주 간단합니다.</Highlight>\n        <br />\n        <span css={css`font-weight: 500;`}>매일 한 문제를 푸는 것뿐입니다.</span>\n      </p>\n    </span>\n  </div>\n);\n\nexport default forwardRef(AboutPage);","/* @jsx jsx */\n\nimport React, { FC } from 'react';\nimport { jsx } from '@emotion/core';\n\nconst BrandingPage: FC = () => (\n  <div className=\"page\">\n    Can we branding daily-boj\n  </div>\n);\n\nexport default BrandingPage;\n","/* @jsx jsx */\n\nimport React, { forwardRef, ForwardRefRenderFunction } from 'react';\nimport { jsx } from '@emotion/core';\n\nconst CalendarPage: ForwardRefRenderFunction<HTMLDivElement> = (_props, ref) => (\n  <div className=\"page\" ref={ref}>\n    Calendar! Core feature of daily boj homepage\n  </div>\n);\n\nexport default forwardRef(CalendarPage);","/* @jsx jsx */\nimport React, { forwardRef, ForwardRefRenderFunction } from 'react';\nimport { jsx } from '@emotion/core';\n\nconst MemberPage: ForwardRefRenderFunction<HTMLDivElement> = (_props, ref) => (\n  <div className=\"page\" ref={ref}>\n    This group contains a lot of goinmul\n  </div>\n);\n\nexport default forwardRef(MemberPage);","/* @jsx jsx */\n\nimport React, { FC } from 'react';\nimport { jsx } from '@emotion/core';\nimport { asset } from '../constants';\nimport { css } from '@emotion/core';\n\nexport type IconKind = 'solved-ac' | 'boj' | 'material' | 'devicons';\n\nexport interface IconProps {\n  kind: IconKind;\n  value?: string;\n}\n\nconst icon = css`\n  height: 1em;\n  max-width: 1em;\n  vertical-align: middle;\n  text-decoration: none;\n  display: inline-block;\n  pointer-events: none;\n`;\nconst material = css`\n  font-family: 'Material Icons Outlined';\n  font-feature-settings: 'liga';\n  letter-spacing: normal;\n  line-height: 1;\n`;\n\nconst Icon: FC<IconProps> = ({ kind, value }) => {\n  if (kind === 'solved-ac') {\n    return (\n      <object css={icon} type=\"image/svg+xml\" data=\"https://static.solved.ac/logo.svg\">\n        Solved AC Icon\n      </object>\n    );\n  } else if (kind === 'boj') {\n    return (\n      <object css={icon} type=\"image/svg+xml\" data={asset('images/baekjoon-square.svg')}>\n        Baekjoon Online Judge Icon\n      </object>\n    );\n  } else if (kind === 'material') {\n    return (\n      <span css={[icon, material]}>\n        {value}\n      </span>\n    );\n  } else if (kind === 'devicons') {\n    return (\n      <span css={[icon]} className=\"devicons\">\n        {value}\n      </span>\n    );\n  }\n  return null;\n};\n\nexport default Icon;","import React, { FC, ReactNode } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Icon from './Icon';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\ntype LinkBase = Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'href'>;\n\nexport interface ExternalLinkProps extends LinkBase {\n  to: string;\n  children: ReactNode;\n}\n\nconst Base = css`\n  text-decoration: underline;\n`;\nconst BaseAnchor = styled.a`\n  ${Base}\n`;\nconst BaseRouterLink = styled(RouterLink)`\n  ${Base}\n`;\n\nconst External: FC<ExternalLinkProps> = ({ to, children, ...props }) => {\n  let icon = <Icon kind='material' value='launch' />;\n  try {\n    const url = new URL(to);\n    switch (url.host) {\n      case 'solved.ac': {\n        icon = <Icon kind='solved-ac' />;\n        break;\n      }\n      case 'acmicpc.net':\n      case 'www.acmicpc.net':\n      case 'noj.am':\n      case 'boj.kr': {\n        icon = <Icon kind='boj' />;\n        break;\n      }\n      case 'github.com': {\n        icon = <Icon kind='devicons' value={'\\ue609'} />;\n        break;\n      }\n      default: {\n        icon = <Icon kind='material' value='launch' />;\n      }\n    }\n  } catch { /* ignore error */ }\n\n  return (\n    <BaseAnchor className=\"link external\" href={to} {...props} >\n      {icon}\n      {children}\n    </BaseAnchor>\n  );\n};\n\nexport interface InternalLinkProps extends LinkBase {\n  to: string;\n  children: ReactNode;\n}\n\nconst Internal: FC<InternalLinkProps> = ({ to, children, ...props }) => (\n  <BaseRouterLink to={to} className=\"link internal\" {...props}>\n    {children}\n  </BaseRouterLink>\n);\n\nconst Link = {\n  External,\n  Internal,\n};\n\nexport default Link;","import React, { forwardRef, ForwardRefRenderFunction } from 'react';\nimport { jsx } from '@emotion/core';\nimport Link from '../../components/Link';\nimport Navbar from '../../components/Navbar';\n\nconst NewbiePage: ForwardRefRenderFunction<HTMLDivElement> = (_props, ref) => (\n  <div className=\"page\" ref={ref}>\n    <Navbar.Fake />\n    <ul>\n      <li>\n        <Link.Internal to=\"member\">\n          관리자\n        </Link.Internal>\n        에게 그룹 초대를 요청해주세요.\n        <ul>\n          <li>\n            <Link.External to=\"https://www.acmicpc.net/group/7875\">\n              Baekjoon Online Judge\n            </Link.External>\n          </li>\n          <li>\n            <Link.External to=\"https://github.com/daily-boj/\">\n              GitHub\n            </Link.External>\n          </li>\n        </ul>\n      </li>\n      <li>\n        매일 00시, 백준 그룹에서 연습을 진행해요.\n        <ul>\n          <li>\n            평일에는 하루 동안 난이도 순으로 A, B, C라는 이름이 붙은 문제 3개를 풀어요.\n          </li>\n          <li>\n            토, 일 동안에는 일주일 간 푼 문제 속에서{' '}\n            <b>4명 이하가 푼 문제</b>\n            를 놓고, 복습할 문제를 정해 복습해요.\n          </li>\n        </ul>\n        문제의 이상에 대한 토론이나 반례 모집 등은 언제든 환영하고 있어요.\n      </li>\n      <li>\n        어느 문제를 풀든 자유지만,\n        {' '}\n        <b>매일 최소 한 문제</b>\n        는 풀어주세요.\n      </li>\n      <li>\n        매일 23시, 뒷풀이 시간을 가져요. 뒷풀이 시간엔 이런 일을 해요.\n        <ul>\n          <li>내일 문제 정하기</li>\n          <li>내가 푼 문제 풀이 공유하기</li>\n          <li>못 푼 문제 풀이 물어보기</li>\n        </ul>\n        복습의 날 이전에는 예외적으로 문제 풀이만 공유해요.\n      </li>\n      <li>\n        <Link.External to=\"https://solved.ac\">\n          solved.ac 확장\n        </Link.External  >\n        을 설치하면 문제 레벨이 보여서 도움이 돼요.\n      </li >\n      <li>\n        GitHub에는 자기 닉네임으로 저장소를 만들어서 이런 일을 해요.\n        <ul>\n          <li>\n            <code>P(문제번호).(확장자)</code>\n            의 형태로 풀이 코드를 올려요.\n          </li>\n          <li>\n            문제의 접근 방식, 해설 등을 작성해요.\n          </li>\n        </ul>\n        코드를 GitHub에 올리는 것은 필수가 아니지만 가능하면 올려주세요.\n      </li>\n    </ul>\n  </div>\n);\n\nexport default forwardRef(NewbiePage);","import React, { FC } from 'react';\nimport { jsx } from '@emotion/core';\n\nconst StatSolvePage: FC = () => (\n  <div className=\"page\">\n    {'Statistics of solve rate'}\n  </div>\n);\n\nexport default StatSolvePage;","import React, { FC } from 'react';\nimport { jsx } from '@emotion/core';\n\nconst StatTierPage: FC = () => (\n  <div className=\"page\">\n    Have we solved Gold IV? wow\n  </div>\n);\n\nexport default StatTierPage;","/* @jsx jsx */\n\nimport React, { FC } from 'react';\nimport { jsx } from '@emotion/core';\n\nexport const FilterId = 'inset-shadow';\n\nconst InsetShadow: FC = () => (\n  <filter id={FilterId} x=\"-10\" y=\"-10\" width=\"2048\" height=\"2048\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\n    <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n    <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\n    <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" />\n    <feOffset dx=\"-10\" dy=\"-10\" />\n    <feGaussianBlur stdDeviation=\"5\" />\n    <feComposite in2=\"hardAlpha\" operator=\"arithmetic\" k2=\"-1\" k3=\"1\" />\n    <feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.7 0\" />\n    <feBlend mode=\"normal\" in2=\"shape\" result=\"effect1_innerShadow\" />\n    <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\" />\n    <feOffset dx=\"15\" dy=\"15\" />\n    <feGaussianBlur stdDeviation=\"5\" />\n    <feComposite in2=\"hardAlpha\" operator=\"arithmetic\" k2=\"-1\" k3=\"1\" />\n    <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0.682353 0 0 0 0 0.682353 0 0 0 0 0.752941 0 0 0 0.2 0\" />\n    <feBlend mode=\"normal\" in2=\"effect1_innerShadow\" result=\"effect2_innerShadow\" />\n  </filter>\n);\n\nexport default {\n  FilterId,\n  Element: InsetShadow,\n};","/* @jsx jsx */\nimport React, { FC, useRef, ReactElement, useState, useEffect, useMemo } from 'react';\nimport { render } from 'react-dom';\nimport { jsx } from '@emotion/core';\n\nconst RasterizeSvg: FC<{ children: ReactElement }> = ({ children, ...props }) => {\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const [img] = useState(() => {\n    const node = document.createElement('img');\n\n    node.onload = (): void => {\n      if (canvas.current) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        canvas.current.getContext('2d')!.drawImage(img, 0, 0);\n        // URL.revokeObjectURL(img.src);\n      }\n    };\n\n    return node;\n  });\n  const [svgNode, setSvgNode] = useState<SVGSVGElement | null>(null);\n  const [width, height] = useMemo(() => {\n    if (svgNode === null) {\n      return [512, 512];\n    }\n    return [svgNode.width.baseVal.value, svgNode.height.baseVal.value];\n  }, [svgNode]);\n  const image64 = useMemo(() => {\n    if (svgNode === null) {\n      return null;\n    }\n    const serialized = new XMLSerializer().serializeToString(svgNode);\n    const blob = new Blob([serialized], { type: 'image/svg+xml;charset=utf-8' });\n    return URL.createObjectURL(blob);\n  }, [svgNode]);\n\n  useEffect(() => {\n    const fakeRoot = document.createElement('div');\n    fakeRoot.style.position = 'absolute';\n    fakeRoot.style.opacity = '0';\n    fakeRoot.style.zIndex = '-1';\n    document.body.appendChild(fakeRoot);\n    render(children, fakeRoot, async () => {\n      const svg = fakeRoot.querySelector('svg');\n      if (svg == null) {\n        return;\n      }\n      for (const useTag of svg.getElementsByTagName('use')) {\n        const url = useTag.getAttribute('xlink:href') ?? useTag.href.baseVal;\n        const query = url.includes('#') ? url.substring(url.indexOf('#')) : null;\n        const svgText = await (await fetch(url)).text();\n        const svgParsed = new DOMParser().parseFromString(svgText, 'image/svg+xml');\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const element = query ? svgParsed.querySelector(query)! : svgParsed.documentElement;\n        const replacement = document.createElement('g');\n        for (const { name, value } of element.attributes) {\n          replacement.setAttribute(name, value);\n        }\n        for (const { name, value } of useTag.attributes) {\n          replacement.setAttribute(name, value);\n        }\n        replacement.append(...element.childNodes);\n\n        useTag.outerHTML = replacement.outerHTML;\n      }\n      const toVisit: Node[] = [svg];\n      let current = undefined;\n      while ((current = toVisit.shift()) !== undefined) {\n        if (current instanceof HTMLElement || current instanceof SVGElement) {\n          for (const sheet of current.ownerDocument.styleSheets) {\n            try {\n              for (const rule of sheet.rules) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const ruleAny = rule as any;\n                if (current.matches(ruleAny.selectorText)) {\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                  for (const key of Object.values(ruleAny.style) as any[]) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    (current.style as any)[key] = ruleAny.style[key];\n                  }\n                }\n              }\n            } catch{\n              /* do nothing */\n            }\n          }\n        }\n        toVisit.push(...current.childNodes);\n      }\n      setSvgNode(svg);\n      setTimeout(() => {\n        document.body.removeChild(fakeRoot);\n      }, 100);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (canvas.current !== null && image64 !== null) {\n      img.src = image64;\n    }\n  }, [canvas, image64]);\n\n  return (\n    svgNode && <canvas ref={canvas} width={width} height={height} {...props} />\n  );\n};\n\nexport default React.memo(RasterizeSvg);\n","/* @jsx jsx */\n\nimport React, { FC } from 'react';\nimport { jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport Logo from '../components/Logo';\nimport InsetShadow from './InsetShadow';\nimport RasterizeSvg from '../components/RasterizeSvg';\n\nconst LogoBaseStyled = styled(Logo.Base)`\n  width: 100vw;\n`;\nconst LogoUseStyled = styled(Logo.Use)`\n  fill: #f5f5f5;\n  stroke: #f5f5f5;\n`;\n\nconst ShadowedLogo: FC = (props) => (\n  <RasterizeSvg {...props}>\n    <LogoBaseStyled>\n      <InsetShadow.Element />\n      <LogoUseStyled filter={`url(#${InsetShadow.FilterId})`} />\n    </LogoBaseStyled>\n  </RasterizeSvg>\n);\n\nexport default ShadowedLogo;","/* @jsx jsx */\nimport React, { FC, SVGAttributes } from 'react';\nimport { css, jsx, keyframes } from '@emotion/core';\n\nconst ScrollIndicator: FC<SVGAttributes<SVGSVGElement>> = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 59 22\" {...props}>\n    <rect\n      x=\"1\" y=\"1\"\n      width=\"40\" height=\"20\"\n      rx=\"10\"\n      fill=\"transparent\"\n      strokeWidth=\"2\" stroke=\"black\"\n    />\n    <circle\n      id=\"circle\"\n      cx=\"11\" cy=\"11\"\n      r=\"5\"\n      css={css`\n        animation: 2.5s infinite ${keyframes`\n          0% {\n            opacity: 0;\n            transform: translateX(20px);\n          }\n        \n          30% {\n            opacity: 0;\n            transform: translateX(20px);\n          }\n\n          50% {\n            opacity: 1;\n          }\n\n          70% {\n            opacity: 0;\n            transform: translateX(2px);\n          }\n\n          100% {\n            opacity: 0;\n            transform: translateX(2px);\n          }\n        `};\n      `}\n    />\n    <path\n      d=\"M52 16 L57 11 L52 6\"\n      fill=\"transparent\"\n      stroke=\"black\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nexport default ScrollIndicator;","/* @jsx jsx */\n\nimport React, { FC, useState, useEffect, useRef, Fragment, useCallback } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { BrowserRouter, useHistory } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport * as Pages from '../pages';\nimport { PUBLIC_URL } from '../constants';\nimport ShadowedLogo from './ShadowedLogo';\nimport ScrollIndicator from '../components/ScrollIndicator';\n\nconst Sections = ['/', '/about', '/newbie', '/member', '/calendar'];\n\nfunction determineSectionFromLocation(location: string | undefined): number {\n  const index = Sections.indexOf(location ?? '');\n  if (index === -1) {\n    return 0;\n  } else {\n    return index;\n  }\n}\n\ndeclare const root: HTMLDivElement;\n\nconst App: FC = () => {\n  const history = useHistory();\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(determineSectionFromLocation(history.location.pathname));\n\n  const sectionElements = [useRef<HTMLDivElement>(null), useRef<HTMLDivElement>(null), useRef<HTMLDivElement>(null), useRef<HTMLDivElement>(null), useRef<HTMLDivElement>(null)];\n\n  const currentSectionIndexRef = useRef<number>(currentSectionIndex);\n  const isAnimatingRef = useRef<boolean>(false);\n  const inner = useRef<HTMLDivElement>(null);\n\n  const updateSectionIndex = useCallback((newIndex: number) => {\n    isAnimatingRef.current = true;\n    setCurrentSectionIndex(newIndex);\n    history.push(Sections[newIndex]);\n    setTimeout(() => {\n      isAnimatingRef.current = false;\n    }, 500);\n  }, []);\n\n  useEffect(() => {\n    currentSectionIndexRef.current = currentSectionIndex;\n  }, [currentSectionIndex]);\n\n  useEffect(() => {\n    history.listen((location) => {\n      setCurrentSectionIndex(determineSectionFromLocation(location.pathname));\n    });\n  }, []);\n\n  const wheelListener = useCallback((event: WheelEvent): void => {\n    const currentSectionIndex = currentSectionIndexRef.current;\n    if (isAnimatingRef.current) {\n      return;\n    }\n\n    const { deltaY } = event;\n    const isUp = deltaY < 0;\n    const isDown = deltaY > 0;\n\n    const currentSection = sectionElements[currentSectionIndex].current;\n    if (!currentSection) {\n      return;\n    }\n\n    if (currentSection.scrollHeight !== currentSection.clientHeight) {\n      const scrollUpLimitReached = isUp && currentSection.scrollTop === 0;\n      const scrollDownLimitReached = isDown && Math.round(currentSection.scrollTop + currentSection.clientHeight + 1) >= currentSection.scrollHeight;\n      if (!scrollUpLimitReached && !scrollDownLimitReached) {\n        return;\n      }\n    }\n\n    event.preventDefault();\n    if (isUp && currentSectionIndex > 0) {\n      updateSectionIndex(currentSectionIndex - 1);\n    } else if (isDown && currentSectionIndex < Sections.length - 1) {\n      updateSectionIndex(currentSectionIndex + 1);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('wheel', wheelListener);\n\n    return (): void => window.removeEventListener('wheel', wheelListener);\n  }, [wheelListener]);\n\n  const touchStartTimeRef = useRef<number>(Date.now());\n  const touchStartRef = useRef<[number, number]>([0, 0]);\n  const lastVectorRef = useRef<[number, number]>([0, 0]);\n  const touchStartListener = useCallback((event: TouchEvent): void => {\n    lastVectorRef.current = [0, 0];\n    if (event.touches.length !== 1) {\n      return;\n    }\n    touchStartRef.current = [event.touches[0].pageX, event.touches[0].pageY];\n    touchStartTimeRef.current = Date.now();\n  }, []);\n\n  const touchMoveListener = useCallback((event: TouchEvent): void => {\n    if (event.touches.length !== 1) {\n      return;\n    }\n    const { pageX, pageY } = event.touches[0];\n    const [x, y] = touchStartRef.current;\n    const [vx, vy] = [pageX - x, pageY - y];\n    lastVectorRef.current = [vx, vy];\n    if (inner.current) {\n      const angle = Math.abs(Math.atan2(vx, vy) * 180 / Math.PI);\n      const isHorizontal = Math.abs(90 - angle) <= 30;\n      inner.current.style.left = `${isHorizontal ? vx : 0}px`;\n      inner.current.style.transition = 'transform 1s ease';\n    }\n  }, []);\n\n  const touchEndListener = useCallback((_event: TouchEvent): void => {\n    const [vx, vy] = lastVectorRef.current;\n    const angle = Math.abs(Math.atan2(vx, vy) * 180 / Math.PI);\n    const isHorizontal = Math.abs(90 - angle) <= 30;\n    const timeUsed = (Date.now() - touchStartTimeRef.current, Math.min(500)) / 1000;\n    const pageMovement = Math.abs(vx / window.innerWidth) >= 0.2 * timeUsed && isHorizontal ? Math.sign(vx) : 0;\n    updateSectionIndex(currentSectionIndexRef.current - pageMovement);\n    if (inner.current) {\n      inner.current.style.left = '0';\n      inner.current.style.transition = 'transform 1s ease, left 1s ease';\n    }\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener('touchstart', touchStartListener);\n    document.addEventListener('touchmove', touchMoveListener);\n    document.addEventListener('touchend', touchEndListener);\n\n    return (): void => {\n      document.removeEventListener('touchstart', touchStartListener);\n      document.removeEventListener('touchmove', touchMoveListener);\n      document.removeEventListener('touchend', touchEndListener);\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <Navbar.Base />\n      <div\n        css={css`\n          position: relative;\n\n          display: flex;\n          flex-direction: row;\n          \n          transition: transform 1s ease;\n          height: 100vh;\n\n          .page {\n            min-width: 100vw;\n            max-width: 100vw;\n            min-height: 100vh;\n            overflow: auto;\n          }\n          \n          will-change: left, transform;\n        `}\n        ref={inner}\n        style={{\n          transform: `translate3d(-${100 * currentSectionIndex}vw, 0px, 0px)`\n        }}\n      >\n        <Pages.Index ref={sectionElements[0]} />\n        <ShadowedLogo\n          css={css`\n            position: absolute;\n            left: 50vw;\n\n            width: 100vw;\n            height: 100vw;\n\n            @media screen and (min-width: 479px) {\n              top: 50%;\n              transform: translate(0, -50%);\n            }\n\n            @media screen and (max-width: 478px) {\n              top: 0;\n            }\n          `}\n        />\n        <Pages.About ref={sectionElements[1]} />\n        <Pages.Newbie ref={sectionElements[2]} />\n        <Pages.Member ref={sectionElements[3]} />\n        <Pages.Calendar ref={sectionElements[4]} />\n        <Pages.Branding />\n        <Pages.StatSolve />\n        <Pages.StatTier />\n      </div>\n      <ScrollIndicator\n        css={css`\n          margin: auto 0;\n          position: absolute;\n          bottom: 2rem;\n          height: 2rem;\n          left: 50%;\n          transform: translateX(-50%);\n        `}\n      />\n    </Fragment>\n  );\n};\n\nconst RoutedApp: FC = () => (\n  <BrowserRouter basename={PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n);\n\nexport default RoutedApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = Partial<{\n  onSuccess(registration: ServiceWorkerRegistration): void;\n  onUpdate(registration: ServiceWorkerRegistration): void;\n}>;\n\nasync function registerValidSW(swUrl: string, config?: Config): Promise<void> {\n  try {\n    const registration = await navigator.serviceWorker.register(swUrl);\n    registration.onupdatefound = (): void => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = (): void => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log(\n              'New content is available and will be used when all ' +\n              'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n            );\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  } catch (error) {\n    console.error('Error during service worker registration:', error);\n  }\n}\n\nasync function checkValidServiceWorker(swUrl: string, config?: Config): Promise<void> {\n  // Check if the service worker can be found. If it can't reload the page.\n  try {\n    const response = await fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    });\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (\n      response.status === 404 ||\n      (contentType != null && contentType.indexOf('javascript') === -1)\n    ) {\n      // No service worker found. Probably a different app. Reload the page.\n      const registration = await navigator.serviceWorker.ready;\n      await registration.unregister();\n      window.location.reload();\n    } else {\n      // Service worker found. Proceed as normal.\n      await registerValidSW(swUrl, config);\n    }\n  } catch {\n    console.log(\n      'No internet connection found. App is running in offline mode.'\n    );\n  }\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', async () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        await checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        await navigator.serviceWorker.ready;\n        console.log(\n          'This web app is being served cache-first by a service ' +\n          'worker. To learn more, visit https://bit.ly/CRA-PWA'\n        );\n      } else {\n        // Is not localhost. Just register service worker\n        await registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport async function unregister(): Promise<void> {\n  if ('serviceWorker' in navigator) {\n    try {\n      const registration = await navigator.serviceWorker.ready;\n      await registration.unregister();\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n}\n","import { css } from '@emotion/core';\n\nconst StyleReset = css`\nhtml, body {\n  max-width: 100vw; \n}\nhtml, body, #root {\n  padding: 0;\n  margin: 0;\n\n  min-height: 100vh;\n\n  box-sizing: border-box;\n}\n\na {\n  color: unset;\n  text-decoration: unset;\n}\n\nobject {\n  pointer-events: none;;\n}\n`;\n\nexport default StyleReset;","import { css } from '@emotion/core';\nimport * as Vars from './vars';\n\nconst StyleDefault = css`\n:lang(ko) {\n  word-break: keep-all;\n}\n\nbody {\n  background-color: ${Vars.Background};\n  letter-spacing: -0.04em;\n  font-size: 1.3rem;\n}\n\nhtml, body, #root {\n  overflow: hidden;\n}\n\n#root {\n  position: static;\n  scroll-behavior: smooth;\n}\n\ncode {\n  background-color: ${Vars.CodeBackground};\n  color: ${Vars.CodeForeground};\n  padding: 0.2em 0.4em;\n  border-radius: 0.4em;\n}\n`;\n\nexport default StyleDefault;","import { css } from '@emotion/core';\nimport '@ibm/plex/css/ibm-plex.min.css';\nimport IBMPlexSansKoreanExtraLight from '@ibm/plex/IBM-Plex-Sans-KR/fonts/complete/woff2/unhinted/IBMPlexSansKR-ExtraLight.woff2';\nimport IBMPlexSansKoreanLight from '@ibm/plex/IBM-Plex-Sans-KR/fonts/complete/woff2/unhinted/IBMPlexSansKR-Light.woff2';\nimport IBMPlexSansKoreanRegular from '@ibm/plex/IBM-Plex-Sans-KR/fonts/complete/woff2/unhinted/IBMPlexSansKR-Regular.woff2';\nimport IBMPlexSansKoreanText from '@ibm/plex/IBM-Plex-Sans-KR/fonts/complete/woff2/unhinted/IBMPlexSansKR-Text.woff2';\nimport IBMPlexSansKoreanMedium from '@ibm/plex/IBM-Plex-Sans-KR/fonts/complete/woff2/unhinted/IBMPlexSansKR-Medium.woff2';\nimport IBMPlexSansKoreanBold from '@ibm/plex/IBM-Plex-Sans-KR/fonts/complete/woff2/unhinted/IBMPlexSansKR-Bold.woff2';\nimport IBMPlexSansKoreanSemiBold from '@ibm/plex/IBM-Plex-Sans-KR/fonts/complete/woff2/unhinted/IBMPlexSansKR-SemiBold.woff2';\n\nconst StyleFont = css`\n@font-face {\n    font-family: 'IBM Plex Sans KR';\n    font-style: normal;\n    font-weight: 200;\n    src: local('IBM Plex Sans ExtraLight'), local('IBMPlexSans-ExtraLight'), url(${IBMPlexSansKoreanExtraLight}) format('woff2');\n}\n@font-face {\n    font-family: IBM Plex Sans KR;\n    font-style: normal;\n    font-weight: 300;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'), url(${IBMPlexSansKoreanLight}) format('woff2');\n}\n@font-face {\n    font-family: IBM Plex Sans KR;\n    font-style: normal;\n    font-weight: 400;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'), url(${IBMPlexSansKoreanRegular}) format('woff2');\n}\n@font-face {\n    font-family: IBM Plex Sans KR;\n    font-style: normal;\n    font-weight: 450;\n    src: local('IBM Plex Sans Text'), local('IBMPlexSans-Text'), url(${IBMPlexSansKoreanText}) format('woff2');\n}\n@font-face {\n    font-family: IBM Plex Sans KR;\n    font-style: normal;\n    font-weight: 500;\n    src: local('IBM Plex Sans Medium'), local('IBMPlexSans-Medium'), url(${IBMPlexSansKoreanMedium}) format('woff2');\n}\n@font-face {\n    font-family: IBM Plex Sans KR;\n    font-style: normal;\n    font-weight: 600;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'), url(${IBMPlexSansKoreanSemiBold}) format('woff2');\n}\n@font-face {\n    font-family: IBM Plex Sans KR;\n    font-style: normal;\n    font-weight: 700;\n    src: local('IBM Plex Sans Bold'), local('IBMPlexSans-Bold'), url(${IBMPlexSansKoreanBold}) format('woff2');\n}\n\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'IBM Plex Sans KR', sans-serif;\n  font-display: swap;\n}\n`;\n\nexport default StyleFont;","/* @jsx jsx */\n\nimport React from 'react';\nimport { jsx } from '@emotion/core';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './service-worker';\nimport StyleReset from './styles/reset';\nimport StyleDefault from './styles/default';\nimport StyleFont from './styles/font';\nimport { Global } from '@emotion/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Global styles={[StyleReset, StyleFont, StyleDefault]} />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}